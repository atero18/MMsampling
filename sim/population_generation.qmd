---
title: "Population generation"
format: html
---

```{r}
#| message: false
#| warning: false
library(dplyr)
options(dplyr.summarise.inform = FALSE)
library(tibble)
library(tidyr)
library(glue)
library(ggplot2)
theme_set(theme_light())
```


```{r}
N <- 10000L
```

```{r}
source("population_generation.R")
```

Creating independent covariates

```{r}
gen_covariates <- function(N)
{
  sex <- sample(c(0L, 1L), replace = TRUE, size = N, prob = c(0.5, 0.5))
  
  age <- rnorm(n = N, mean = sex * 41.1 + (1L - sex) * 43.9, sd = 10.0)
  age[age < 0.0] <- 0.0
  
  data.frame(const = 1.0, 
             age = age, 
             sex = sex)
}


X <- Z <- gen_covariates(N)

sex <- factor(X$sex)
levels(sex) <- c("Woman", "Man")
```

```{r}
summary(X[, -1L])
```

```{r}
data <- X[, c("sex", "age")]
data$sex <- sex
ggplot(data) + 
  geom_density(aes(x = age, colour = sex)) +
  ggtitle("Age density conditionally to the sex")

data %>% 
  group_by(sex) %>% 
  summarize(meanAge = mean(age))
rm(data)
```

```{r}
X <- Z <- as.matrix(X)
```

Creating parameters for two modes : "int" and "tel". `delta` is defined such that the average measure effect is equal to 1. It depends on `X`.

```{r}
betaTel <- c(1.0, -0.1, 4.0)
print(betaTel)

delta <- c(1.0, -2.0 * mean(X[, "age"])^-1L, 2.0 * N / sum(X[, "sex"]))
betaInt <- betaTel + delta
print(betaInt)
```

$Y_{int}$ and $Y_{tel}$ expectations depending on `X`:

```{r}
data.frame(tel = X %*% betaTel, int = X %*% betaInt) %>% 
  pivot_longer(cols = c("tel", "int"), names_to = "mode", values_to = "value") %>% 
  ggplot() + 
  geom_density(aes(x = value, colour = mode)) +
  ggtitle("Distribution of the counterfactuals expected values")

glue("average value for telephone: {mean(X %*% betaTel)}")
glue("average value for internet: {mean(X %*% betaInt)}")
```

With telephone counterfactuals only:
```{r}
data.frame(tel = X %*% betaTel) %>% 
  ggplot() + 
  geom_density(aes(x = tel)) +
  # ggtitle("Distribution of the expected value of telephone outcomes") +
  ggtitle("Distribution of the expected value of telephone outcomes") +
  xlab("expected value")
```

```{r}
as.numeric(X %*% betaTel) %>% summary()
```

```{r}
totBias <- sum(X %*% delta)
glue("total bias on U: {totBias}")
meanBias <- totBias / N
glue("average bias on U: {meanBias}")
```

We simulate a mode selection MAR (Missing At Random) under a logistic model, with $X$ as variable:

```{r}
alphaInt <- c(0.7, -0.02, -0.5)
pInt <- gen_selection_probabilities(Z, alphaInt)

alphaTel <- c(0.3, 0.02, -0.5)
pTel <- gen_selection_probabilities(Z, alphaTel)
```

Here are some details about the $p_{int}$ and $p_{tel}$:

```{r}
glue("internet probabilities:\n")
summary(pInt) %>% print()
glue("telephone probabilities:\n")
summary(pTel) %>% print()
```

```{r}
pRepTel <- (1.0 - pInt) * pTel
summary(pRepTel)
```

About $S_{r\bullet}$ (case of SRS with $f = \frac{1}{10}$):

```{r}
f <- 1.0 / 10.0
n <- f * N
expSizeSr <- f * sum(pInt)

pi <- rep(f, N)
piMat <- matrix(n * (n - 1L) / (N * (N - 1L)), nrow = N, ncol = N)
diag(piMat) <- f
pCov <- pi2_to_covarInc(piMat)
expVarSr <- f * sum(pInt * (1.0 - pInt)) + 
  t(pInt) %*% pCov %*% pInt %>% 
  as.numeric()

expSizeSr
expVarSr
```
About $S_{mr}$ (case of SRS with $f = \frac{1}{10}$):

```{r}
expSizeSmr <- f * sum(pRepTel)

expVarSmr <- f * sum(pRepTel * (1.0 - pTel)) + 
  f * sum(pRepTel * (1.0 - pInt)) +
  t(pRepTel) %*% pCov %*% pRepTel %>% 
  as.numeric()

expSizeSmr
expVarSmr
```

About $S_a$ (case of SRS with $f = \frac{1}{10}$):

```{r}
expSizeSa <- expSizeSr + expSizeSmr

expVarSa <- f * sum(pRepTel * (1.0 - pTel)) + 
  f * sum(pInt * (1.0 - pInt) * (1.0 - pTel)) +
  t(pInt + pRepTel) %*% pCov %*% (pInt + pRepTel) %>% 
  as.numeric()

expSizeSa
expVarSa
```

```{r}
rm(expSizeSr, expVarSr, 
   expSizeSmr, expVarSmr, 
   expSizeSa, expVarSa)
```


```{r}
data.frame(mode = factor(rep(c("web", "telephone"), each = N)), 
           prob = c(pInt, pTel)) %>% 
  ggplot() + 
  geom_density(aes(x = prob, color = mode)) +
  ggtitle("Distribution of p1 and p2") +
  xlab("mode selection probability")
```

```{r}
pInt[sex == "Man"] %>% summary()
pInt[sex == "Woman"] %>% summary()
```
